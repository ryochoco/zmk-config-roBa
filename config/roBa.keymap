#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        apostrophe {
            bindings = <&kp APOS>;
            key-positions = <20 19>;
        };

        choon {
            bindings = <&kp MINUS>;
            key-positions = <8 9>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 0>;
        };

        mute {
            bindings = <&kp C_MUTE>;
            key-positions = <15 27>;
        };

        dock {
            bindings = <&kp LC(UP_ARROW)>;
            key-positions = <16 28>;
        };

        shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <22 23>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCTRL Q       &kp W      &kp E         &kp R          &kp T                                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S      &kp D         &kp F          &kp G        &trans                       &trans                   &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X      &kp C         &kp V          &kp B        &trans                       &trans                   &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT QUESTION
&mo 4             &kp LCTRL  &kp LEFT_ALT  &kp BACKSPACE  &lt 2 SPACE  &mt LEFT_GUI LANGUAGE_2      &mt LEFT_GUI LANGUAGE_1  &lt 3 ENTER                             &lt 6 AT_SIGN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp F1            &kp F2             &kp F3    &kp F4      &kp F5                                 &kp F6         &kp F7   &kp F8                &kp F9                 &kp F10
&kp N1            &kp N2             &kp N3    &kp N4      &kp N5       &kp TILDE      &kp SEMI   &kp N6         &kp N7   &kp N8                &kp N9                 &kp N0
&kp EXCLAMATION   &kp DOUBLE_QUOTES  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp EQUAL      &kp COLON  &kp AMPERSAND  &kp SQT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans    &trans      &trans       &trans         &trans     &trans                                                               &kp SLASH
            >;
        };

        ARROW {
            bindings = <
&trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8      &kp KP_NUMBER_9  &trans                                               &kp LG(LEFT_BRACKET)  &kp LG(LEFT)    &kp UP_ARROW          &kp LG(RIGHT_ARROW)  &kp LG(RIGHT_BRACKET)
&trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5      &kp KP_NUMBER_6  &kp KP_PLUS      &kp C_VOLUME_UP      &kp LC(LEFT)   &kp LC(LS(TAB))       &kp LEFT_ARROW  &kp DOWN_ARROW        &kp RIGHT_ARROW      &kp LC(TAB)
&trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2      &kp KP_NUMBER_3  &kp KP_MULTIPLY  &kp C_VOL_DN         &kp LC(RIGHT)  &kp DELETE            &kp PG_UP       &kp LG(LS(NUMBER_4))  &kp PAGE_DOWN        &kp LG(R)
&trans  &mt LCTRL KP_N0  &mt LEFT_ALT KP_DOT  &trans           &trans           &trans               &trans         &trans                                                                           &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                      &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I      &to_layer_0 O       &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &trans  &to_layer_0 H  &mkp MB1       &mo 5              &mkp MB2            &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &trans      &trans  &to_layer_0 N  &to_layer_0 M  &to_layer_0 COMMA  &to_layer_0 PERIOD  &to_layer_0 QUESTION
&trans         &trans         &trans         &trans         &trans         &mo 4       &trans  &trans                                                               &to_layer_0 AT_SIGN
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
